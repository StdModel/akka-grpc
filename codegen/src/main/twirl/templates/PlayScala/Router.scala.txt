@*
 * Copyright (C) 2018-2019 Lightbend Inc. <https://www.lightbend.com>
 *@

@(service: akka.grpc.gen.scaladsl.Service, powerApis: Boolean)

@akka.grpc.gen.Constants.DoNotEditComment
package @service.packageName

import scala.concurrent.Future

import akka.http.scaladsl.model.{ HttpRequest, HttpResponse }
import akka.grpc.scaladsl.GrpcExceptionHandler.defaultMapper
import akka.stream.Materializer

import akka.grpc.internal.PlayRouter

@defining(if (powerApis) service.name + "PowerApi" else service.name) { serviceName =>
  /**
   * Abstract base class for implementing @serviceName and using as a play Router
   */
  abstract class Abstract@{serviceName}Router(mat: Materializer, eHandler: PartialFunction[Throwable, Status] = defaultMapper) extends PlayRouter(mat, @{service.name}.name) with @{serviceName} {

    final override def createHandler(serviceName: String, mat: Materializer): HttpRequest => Future[HttpResponse] =
      @{serviceName}Handler(this, serviceName, eHandler)(mat)
  }
}
